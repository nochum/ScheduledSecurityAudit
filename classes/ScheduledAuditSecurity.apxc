global class ScheduledAuditSecurity implements Schedulable {    
    global void execute(SchedulableContext sc) {
        ScheduledSecurityAuditSettings__c ssas = null;
        
        // Retrieve and update last run time
        ssas = [SELECT Id, LastRunTime__c FROM ScheduledSecurityAuditSettings__c LIMIT 1];
        DateTime lastRun = ssas.LastRunTime__c;
        ssas.LastRunTime__c = System.now();        
        update ssas;

        // Retrieve all configuration changes since last run
        List<SetupAuditTrail> sat = [SELECT Id, Section, Action, Display, CreatedDate FROM SetupAuditTrail
                               WHERE CreatedDate >= :lastRun
                               ORDER BY CreatedDate];
        
        // Process changes
        List<ConfigChange> chgList = new List<ConfigChange>();
        for (SetupAuditTrail auditLogRec : sat) {
            if(auditLogRec.Section == 'Security Controls' ||
               auditLogRec.Section == 'Password Policies' ||
               auditLogRec.Section == 'Session Settings') {
                   ConfigChange chg = new ConfigChange();
                   chg.section = auditLogRec.Section;
                   chg.action = auditLogRec.Action;
                   chg.display = auditLogRec.Display;
                   chg.changeTime = auditLogRec.CreatedDate;
                   chgList.add(chg);
            }
        }
        
        // Send an email if security settings were changed
        if (chgList.size() > 0) {
            Messaging.Email[] messages = new List<Messaging.Email>();
            Messaging.SingleEmailMessage message = new Messaging.SingleEmailMessage();
            message.subject = 'Changes have been made to org security settings';
            message.plainTextBody = 
                'The following changes have been made to the org security setttings:\n';
            for (ConfigChange chg : chgList) {
                message.plainTextBody += chg.changeTime + '\t' + chg.action + '\t' + chg.display + '\n';
            }
            message.setToAddresses(new String[] {'nklein@salesforce.com'});
            messages.add(message);
			Messaging.sendEmail(messages);

        }
    }
}